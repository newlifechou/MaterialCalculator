//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace NewMaterialCalculator.BasicService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcBDCustomer", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcBDCustomer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MemoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactPerson {
            get {
                return this.ContactPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactPersonField, value) != true)) {
                    this.ContactPersonField = value;
                    this.RaisePropertyChanged("ContactPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Memo {
            get {
                return this.MemoField;
            }
            set {
                if ((object.ReferenceEquals(this.MemoField, value) != true)) {
                    this.MemoField = value;
                    this.RaisePropertyChanged("Memo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone1 {
            get {
                return this.Phone1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Phone1Field, value) != true)) {
                    this.Phone1Field = value;
                    this.RaisePropertyChanged("Phone1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone2 {
            get {
                return this.Phone2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Phone2Field, value) != true)) {
                    this.Phone2Field = value;
                    this.RaisePropertyChanged("Phone2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcBDDeliveryAddress", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcBDDeliveryAddress : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CellPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CellPhone {
            get {
                return this.CellPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.CellPhoneField, value) != true)) {
                    this.CellPhoneField = value;
                    this.RaisePropertyChanged("CellPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Receiver {
            get {
                return this.ReceiverField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverField, value) != true)) {
                    this.ReceiverField = value;
                    this.RaisePropertyChanged("Receiver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcBDVHPDevice", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcBDVHPDevice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HighestDiameterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HighestPressureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HighestTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiveTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeName {
            get {
                return this.CodeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeNameField, value) != true)) {
                    this.CodeNameField = value;
                    this.RaisePropertyChanged("CodeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceInformation {
            get {
                return this.DeviceInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceInformationField, value) != true)) {
                    this.DeviceInformationField = value;
                    this.RaisePropertyChanged("DeviceInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double HighestDiameter {
            get {
                return this.HighestDiameterField;
            }
            set {
                if ((this.HighestDiameterField.Equals(value) != true)) {
                    this.HighestDiameterField = value;
                    this.RaisePropertyChanged("HighestDiameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double HighestPressure {
            get {
                return this.HighestPressureField;
            }
            set {
                if ((this.HighestPressureField.Equals(value) != true)) {
                    this.HighestPressureField = value;
                    this.RaisePropertyChanged("HighestPressure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double HighestTemperature {
            get {
                return this.HighestTemperatureField;
            }
            set {
                if ((this.HighestTemperatureField.Equals(value) != true)) {
                    this.HighestTemperatureField = value;
                    this.RaisePropertyChanged("HighestTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerField, value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiveTime {
            get {
                return this.ReceiveTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiveTimeField, value) != true)) {
                    this.ReceiveTimeField = value;
                    this.RaisePropertyChanged("ReceiveTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcBDVHPMold", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcBDVHPMold : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentUsedCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EstimateUsedCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InnerDiameterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ModelHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MoldDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MoldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MoldTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentUsedCount {
            get {
                return this.CurrentUsedCountField;
            }
            set {
                if ((this.CurrentUsedCountField.Equals(value) != true)) {
                    this.CurrentUsedCountField = value;
                    this.RaisePropertyChanged("CurrentUsedCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EstimateUsedCount {
            get {
                return this.EstimateUsedCountField;
            }
            set {
                if ((this.EstimateUsedCountField.Equals(value) != true)) {
                    this.EstimateUsedCountField = value;
                    this.RaisePropertyChanged("EstimateUsedCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double InnerDiameter {
            get {
                return this.InnerDiameterField;
            }
            set {
                if ((this.InnerDiameterField.Equals(value) != true)) {
                    this.InnerDiameterField = value;
                    this.RaisePropertyChanged("InnerDiameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ModelHeight {
            get {
                return this.ModelHeightField;
            }
            set {
                if ((this.ModelHeightField.Equals(value) != true)) {
                    this.ModelHeightField = value;
                    this.RaisePropertyChanged("ModelHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MoldDetails {
            get {
                return this.MoldDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.MoldDetailsField, value) != true)) {
                    this.MoldDetailsField = value;
                    this.RaisePropertyChanged("MoldDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MoldName {
            get {
                return this.MoldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MoldNameField, value) != true)) {
                    this.MoldNameField = value;
                    this.RaisePropertyChanged("MoldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MoldType {
            get {
                return this.MoldTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MoldTypeField, value) != true)) {
                    this.MoldTypeField = value;
                    this.RaisePropertyChanged("MoldType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcBDVHPProcess", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcBDVHPProcess : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeMeaningField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeMeaning {
            get {
                return this.CodeMeaningField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeMeaningField, value) != true)) {
                    this.CodeMeaningField = value;
                    this.RaisePropertyChanged("CodeMeaning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeName {
            get {
                return this.CodeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeNameField, value) != true)) {
                    this.CodeNameField = value;
                    this.RaisePropertyChanged("CodeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcBDCompound", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcBDCompound : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BoilingPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DensityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InformationSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaterialNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MeltingPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecialPropertyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BoilingPoint {
            get {
                return this.BoilingPointField;
            }
            set {
                if ((object.ReferenceEquals(this.BoilingPointField, value) != true)) {
                    this.BoilingPointField = value;
                    this.RaisePropertyChanged("BoilingPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Density {
            get {
                return this.DensityField;
            }
            set {
                if ((this.DensityField.Equals(value) != true)) {
                    this.DensityField = value;
                    this.RaisePropertyChanged("Density");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InformationSource {
            get {
                return this.InformationSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.InformationSourceField, value) != true)) {
                    this.InformationSourceField = value;
                    this.RaisePropertyChanged("InformationSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaterialName {
            get {
                return this.MaterialNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialNameField, value) != true)) {
                    this.MaterialNameField = value;
                    this.RaisePropertyChanged("MaterialName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MeltingPoint {
            get {
                return this.MeltingPointField;
            }
            set {
                if ((object.ReferenceEquals(this.MeltingPointField, value) != true)) {
                    this.MeltingPointField = value;
                    this.RaisePropertyChanged("MeltingPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecialProperty {
            get {
                return this.SpecialPropertyField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialPropertyField, value) != true)) {
                    this.SpecialPropertyField = value;
                    this.RaisePropertyChanged("SpecialProperty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcBDSupplier", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcBDSupplier : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbbrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CellPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Abbr {
            get {
                return this.AbbrField;
            }
            set {
                if ((object.ReferenceEquals(this.AbbrField, value) != true)) {
                    this.AbbrField = value;
                    this.RaisePropertyChanged("Abbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CellPhone {
            get {
                return this.CellPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.CellPhoneField, value) != true)) {
                    this.CellPhoneField = value;
                    this.RaisePropertyChanged("CellPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactPerson {
            get {
                return this.ContactPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactPersonField, value) != true)) {
                    this.ContactPersonField = value;
                    this.RaisePropertyChanged("ContactPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierName {
            get {
                return this.SupplierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierNameField, value) != true)) {
                    this.SupplierNameField = value;
                    this.RaisePropertyChanged("SupplierName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcBDElement", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcBDElement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AtomicNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MolWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AtomicNumber {
            get {
                return this.AtomicNumberField;
            }
            set {
                if ((this.AtomicNumberField.Equals(value) != true)) {
                    this.AtomicNumberField = value;
                    this.RaisePropertyChanged("AtomicNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MolWeight {
            get {
                return this.MolWeightField;
            }
            set {
                if ((this.MolWeightField.Equals(value) != true)) {
                    this.MolWeightField = value;
                    this.RaisePropertyChanged("MolWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BasicService.ICustomerService")]
    public interface ICustomerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetCustomer", ReplyAction="http://tempuri.org/ICustomerService/GetCustomerResponse")]
        NewMaterialCalculator.BasicService.DcBDCustomer[] GetCustomer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetCustomer", ReplyAction="http://tempuri.org/ICustomerService/GetCustomerResponse")]
        System.Threading.Tasks.Task<NewMaterialCalculator.BasicService.DcBDCustomer[]> GetCustomerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/AddCustomer", ReplyAction="http://tempuri.org/ICustomerService/AddCustomerResponse")]
        int AddCustomer(NewMaterialCalculator.BasicService.DcBDCustomer model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/AddCustomer", ReplyAction="http://tempuri.org/ICustomerService/AddCustomerResponse")]
        System.Threading.Tasks.Task<int> AddCustomerAsync(NewMaterialCalculator.BasicService.DcBDCustomer model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/UpdateCustomer", ReplyAction="http://tempuri.org/ICustomerService/UpdateCustomerResponse")]
        int UpdateCustomer(NewMaterialCalculator.BasicService.DcBDCustomer model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/UpdateCustomer", ReplyAction="http://tempuri.org/ICustomerService/UpdateCustomerResponse")]
        System.Threading.Tasks.Task<int> UpdateCustomerAsync(NewMaterialCalculator.BasicService.DcBDCustomer model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/DeleteCustomer", ReplyAction="http://tempuri.org/ICustomerService/DeleteCustomerResponse")]
        int DeleteCustomer(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/DeleteCustomer", ReplyAction="http://tempuri.org/ICustomerService/DeleteCustomerResponse")]
        System.Threading.Tasks.Task<int> DeleteCustomerAsync(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomerServiceChannel : NewMaterialCalculator.BasicService.ICustomerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerServiceClient : System.ServiceModel.ClientBase<NewMaterialCalculator.BasicService.ICustomerService>, NewMaterialCalculator.BasicService.ICustomerService {
        
        public CustomerServiceClient() {
        }
        
        public CustomerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public NewMaterialCalculator.BasicService.DcBDCustomer[] GetCustomer() {
            return base.Channel.GetCustomer();
        }
        
        public System.Threading.Tasks.Task<NewMaterialCalculator.BasicService.DcBDCustomer[]> GetCustomerAsync() {
            return base.Channel.GetCustomerAsync();
        }
        
        public int AddCustomer(NewMaterialCalculator.BasicService.DcBDCustomer model) {
            return base.Channel.AddCustomer(model);
        }
        
        public System.Threading.Tasks.Task<int> AddCustomerAsync(NewMaterialCalculator.BasicService.DcBDCustomer model) {
            return base.Channel.AddCustomerAsync(model);
        }
        
        public int UpdateCustomer(NewMaterialCalculator.BasicService.DcBDCustomer model) {
            return base.Channel.UpdateCustomer(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCustomerAsync(NewMaterialCalculator.BasicService.DcBDCustomer model) {
            return base.Channel.UpdateCustomerAsync(model);
        }
        
        public int DeleteCustomer(System.Guid id) {
            return base.Channel.DeleteCustomer(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteCustomerAsync(System.Guid id) {
            return base.Channel.DeleteCustomerAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BasicService.IDeliveryAddressService")]
    public interface IDeliveryAddressService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeliveryAddressService/GetDeliveryAddress", ReplyAction="http://tempuri.org/IDeliveryAddressService/GetDeliveryAddressResponse")]
        NewMaterialCalculator.BasicService.DcBDDeliveryAddress[] GetDeliveryAddress();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeliveryAddressService/GetDeliveryAddress", ReplyAction="http://tempuri.org/IDeliveryAddressService/GetDeliveryAddressResponse")]
        System.Threading.Tasks.Task<NewMaterialCalculator.BasicService.DcBDDeliveryAddress[]> GetDeliveryAddressAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeliveryAddressService/AddDeliveryAddress", ReplyAction="http://tempuri.org/IDeliveryAddressService/AddDeliveryAddressResponse")]
        int AddDeliveryAddress(NewMaterialCalculator.BasicService.DcBDDeliveryAddress model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeliveryAddressService/AddDeliveryAddress", ReplyAction="http://tempuri.org/IDeliveryAddressService/AddDeliveryAddressResponse")]
        System.Threading.Tasks.Task<int> AddDeliveryAddressAsync(NewMaterialCalculator.BasicService.DcBDDeliveryAddress model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeliveryAddressService/UpdateDeliveryAddress", ReplyAction="http://tempuri.org/IDeliveryAddressService/UpdateDeliveryAddressResponse")]
        int UpdateDeliveryAddress(NewMaterialCalculator.BasicService.DcBDDeliveryAddress model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeliveryAddressService/UpdateDeliveryAddress", ReplyAction="http://tempuri.org/IDeliveryAddressService/UpdateDeliveryAddressResponse")]
        System.Threading.Tasks.Task<int> UpdateDeliveryAddressAsync(NewMaterialCalculator.BasicService.DcBDDeliveryAddress model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeliveryAddressService/DeleteDeliveryAddress", ReplyAction="http://tempuri.org/IDeliveryAddressService/DeleteDeliveryAddressResponse")]
        int DeleteDeliveryAddress(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeliveryAddressService/DeleteDeliveryAddress", ReplyAction="http://tempuri.org/IDeliveryAddressService/DeleteDeliveryAddressResponse")]
        System.Threading.Tasks.Task<int> DeleteDeliveryAddressAsync(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDeliveryAddressServiceChannel : NewMaterialCalculator.BasicService.IDeliveryAddressService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeliveryAddressServiceClient : System.ServiceModel.ClientBase<NewMaterialCalculator.BasicService.IDeliveryAddressService>, NewMaterialCalculator.BasicService.IDeliveryAddressService {
        
        public DeliveryAddressServiceClient() {
        }
        
        public DeliveryAddressServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DeliveryAddressServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeliveryAddressServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeliveryAddressServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public NewMaterialCalculator.BasicService.DcBDDeliveryAddress[] GetDeliveryAddress() {
            return base.Channel.GetDeliveryAddress();
        }
        
        public System.Threading.Tasks.Task<NewMaterialCalculator.BasicService.DcBDDeliveryAddress[]> GetDeliveryAddressAsync() {
            return base.Channel.GetDeliveryAddressAsync();
        }
        
        public int AddDeliveryAddress(NewMaterialCalculator.BasicService.DcBDDeliveryAddress model) {
            return base.Channel.AddDeliveryAddress(model);
        }
        
        public System.Threading.Tasks.Task<int> AddDeliveryAddressAsync(NewMaterialCalculator.BasicService.DcBDDeliveryAddress model) {
            return base.Channel.AddDeliveryAddressAsync(model);
        }
        
        public int UpdateDeliveryAddress(NewMaterialCalculator.BasicService.DcBDDeliveryAddress model) {
            return base.Channel.UpdateDeliveryAddress(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateDeliveryAddressAsync(NewMaterialCalculator.BasicService.DcBDDeliveryAddress model) {
            return base.Channel.UpdateDeliveryAddressAsync(model);
        }
        
        public int DeleteDeliveryAddress(System.Guid id) {
            return base.Channel.DeleteDeliveryAddress(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteDeliveryAddressAsync(System.Guid id) {
            return base.Channel.DeleteDeliveryAddressAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BasicService.IVHPDeviceService")]
    public interface IVHPDeviceService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPDeviceService/GetVHPDevice", ReplyAction="http://tempuri.org/IVHPDeviceService/GetVHPDeviceResponse")]
        NewMaterialCalculator.BasicService.DcBDVHPDevice[] GetVHPDevice();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPDeviceService/GetVHPDevice", ReplyAction="http://tempuri.org/IVHPDeviceService/GetVHPDeviceResponse")]
        System.Threading.Tasks.Task<NewMaterialCalculator.BasicService.DcBDVHPDevice[]> GetVHPDeviceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPDeviceService/AddVHPDevice", ReplyAction="http://tempuri.org/IVHPDeviceService/AddVHPDeviceResponse")]
        int AddVHPDevice(NewMaterialCalculator.BasicService.DcBDVHPDevice model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPDeviceService/AddVHPDevice", ReplyAction="http://tempuri.org/IVHPDeviceService/AddVHPDeviceResponse")]
        System.Threading.Tasks.Task<int> AddVHPDeviceAsync(NewMaterialCalculator.BasicService.DcBDVHPDevice model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPDeviceService/UpdateVHPDevice", ReplyAction="http://tempuri.org/IVHPDeviceService/UpdateVHPDeviceResponse")]
        int UpdateVHPDevice(NewMaterialCalculator.BasicService.DcBDVHPDevice model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPDeviceService/UpdateVHPDevice", ReplyAction="http://tempuri.org/IVHPDeviceService/UpdateVHPDeviceResponse")]
        System.Threading.Tasks.Task<int> UpdateVHPDeviceAsync(NewMaterialCalculator.BasicService.DcBDVHPDevice model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPDeviceService/DeleteVHPDevice", ReplyAction="http://tempuri.org/IVHPDeviceService/DeleteVHPDeviceResponse")]
        int DeleteVHPDevice(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPDeviceService/DeleteVHPDevice", ReplyAction="http://tempuri.org/IVHPDeviceService/DeleteVHPDeviceResponse")]
        System.Threading.Tasks.Task<int> DeleteVHPDeviceAsync(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVHPDeviceServiceChannel : NewMaterialCalculator.BasicService.IVHPDeviceService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VHPDeviceServiceClient : System.ServiceModel.ClientBase<NewMaterialCalculator.BasicService.IVHPDeviceService>, NewMaterialCalculator.BasicService.IVHPDeviceService {
        
        public VHPDeviceServiceClient() {
        }
        
        public VHPDeviceServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VHPDeviceServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VHPDeviceServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VHPDeviceServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public NewMaterialCalculator.BasicService.DcBDVHPDevice[] GetVHPDevice() {
            return base.Channel.GetVHPDevice();
        }
        
        public System.Threading.Tasks.Task<NewMaterialCalculator.BasicService.DcBDVHPDevice[]> GetVHPDeviceAsync() {
            return base.Channel.GetVHPDeviceAsync();
        }
        
        public int AddVHPDevice(NewMaterialCalculator.BasicService.DcBDVHPDevice model) {
            return base.Channel.AddVHPDevice(model);
        }
        
        public System.Threading.Tasks.Task<int> AddVHPDeviceAsync(NewMaterialCalculator.BasicService.DcBDVHPDevice model) {
            return base.Channel.AddVHPDeviceAsync(model);
        }
        
        public int UpdateVHPDevice(NewMaterialCalculator.BasicService.DcBDVHPDevice model) {
            return base.Channel.UpdateVHPDevice(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateVHPDeviceAsync(NewMaterialCalculator.BasicService.DcBDVHPDevice model) {
            return base.Channel.UpdateVHPDeviceAsync(model);
        }
        
        public int DeleteVHPDevice(System.Guid id) {
            return base.Channel.DeleteVHPDevice(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteVHPDeviceAsync(System.Guid id) {
            return base.Channel.DeleteVHPDeviceAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BasicService.IVHPMoldService")]
    public interface IVHPMoldService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPMoldService/GetVHPMold", ReplyAction="http://tempuri.org/IVHPMoldService/GetVHPMoldResponse")]
        NewMaterialCalculator.BasicService.DcBDVHPMold[] GetVHPMold();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPMoldService/GetVHPMold", ReplyAction="http://tempuri.org/IVHPMoldService/GetVHPMoldResponse")]
        System.Threading.Tasks.Task<NewMaterialCalculator.BasicService.DcBDVHPMold[]> GetVHPMoldAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPMoldService/AddVHPMold", ReplyAction="http://tempuri.org/IVHPMoldService/AddVHPMoldResponse")]
        int AddVHPMold(NewMaterialCalculator.BasicService.DcBDVHPMold model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPMoldService/AddVHPMold", ReplyAction="http://tempuri.org/IVHPMoldService/AddVHPMoldResponse")]
        System.Threading.Tasks.Task<int> AddVHPMoldAsync(NewMaterialCalculator.BasicService.DcBDVHPMold model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPMoldService/UpdateVHPMold", ReplyAction="http://tempuri.org/IVHPMoldService/UpdateVHPMoldResponse")]
        int UpdateVHPMold(NewMaterialCalculator.BasicService.DcBDVHPMold model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPMoldService/UpdateVHPMold", ReplyAction="http://tempuri.org/IVHPMoldService/UpdateVHPMoldResponse")]
        System.Threading.Tasks.Task<int> UpdateVHPMoldAsync(NewMaterialCalculator.BasicService.DcBDVHPMold model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPMoldService/DeleteVHPMold", ReplyAction="http://tempuri.org/IVHPMoldService/DeleteVHPMoldResponse")]
        int DeleteVHPMold(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPMoldService/DeleteVHPMold", ReplyAction="http://tempuri.org/IVHPMoldService/DeleteVHPMoldResponse")]
        System.Threading.Tasks.Task<int> DeleteVHPMoldAsync(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVHPMoldServiceChannel : NewMaterialCalculator.BasicService.IVHPMoldService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VHPMoldServiceClient : System.ServiceModel.ClientBase<NewMaterialCalculator.BasicService.IVHPMoldService>, NewMaterialCalculator.BasicService.IVHPMoldService {
        
        public VHPMoldServiceClient() {
        }
        
        public VHPMoldServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VHPMoldServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VHPMoldServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VHPMoldServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public NewMaterialCalculator.BasicService.DcBDVHPMold[] GetVHPMold() {
            return base.Channel.GetVHPMold();
        }
        
        public System.Threading.Tasks.Task<NewMaterialCalculator.BasicService.DcBDVHPMold[]> GetVHPMoldAsync() {
            return base.Channel.GetVHPMoldAsync();
        }
        
        public int AddVHPMold(NewMaterialCalculator.BasicService.DcBDVHPMold model) {
            return base.Channel.AddVHPMold(model);
        }
        
        public System.Threading.Tasks.Task<int> AddVHPMoldAsync(NewMaterialCalculator.BasicService.DcBDVHPMold model) {
            return base.Channel.AddVHPMoldAsync(model);
        }
        
        public int UpdateVHPMold(NewMaterialCalculator.BasicService.DcBDVHPMold model) {
            return base.Channel.UpdateVHPMold(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateVHPMoldAsync(NewMaterialCalculator.BasicService.DcBDVHPMold model) {
            return base.Channel.UpdateVHPMoldAsync(model);
        }
        
        public int DeleteVHPMold(System.Guid id) {
            return base.Channel.DeleteVHPMold(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteVHPMoldAsync(System.Guid id) {
            return base.Channel.DeleteVHPMoldAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BasicService.IVHPProcessService")]
    public interface IVHPProcessService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPProcessService/GetVHPProcess", ReplyAction="http://tempuri.org/IVHPProcessService/GetVHPProcessResponse")]
        NewMaterialCalculator.BasicService.DcBDVHPProcess[] GetVHPProcess();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPProcessService/GetVHPProcess", ReplyAction="http://tempuri.org/IVHPProcessService/GetVHPProcessResponse")]
        System.Threading.Tasks.Task<NewMaterialCalculator.BasicService.DcBDVHPProcess[]> GetVHPProcessAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPProcessService/AddVHPProcess", ReplyAction="http://tempuri.org/IVHPProcessService/AddVHPProcessResponse")]
        int AddVHPProcess(NewMaterialCalculator.BasicService.DcBDVHPProcess model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPProcessService/AddVHPProcess", ReplyAction="http://tempuri.org/IVHPProcessService/AddVHPProcessResponse")]
        System.Threading.Tasks.Task<int> AddVHPProcessAsync(NewMaterialCalculator.BasicService.DcBDVHPProcess model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPProcessService/UpdateVHPProcess", ReplyAction="http://tempuri.org/IVHPProcessService/UpdateVHPProcessResponse")]
        int UpdateVHPProcess(NewMaterialCalculator.BasicService.DcBDVHPProcess model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPProcessService/UpdateVHPProcess", ReplyAction="http://tempuri.org/IVHPProcessService/UpdateVHPProcessResponse")]
        System.Threading.Tasks.Task<int> UpdateVHPProcessAsync(NewMaterialCalculator.BasicService.DcBDVHPProcess model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPProcessService/DeleteVHPProcess", ReplyAction="http://tempuri.org/IVHPProcessService/DeleteVHPProcessResponse")]
        int DeleteVHPProcess(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPProcessService/DeleteVHPProcess", ReplyAction="http://tempuri.org/IVHPProcessService/DeleteVHPProcessResponse")]
        System.Threading.Tasks.Task<int> DeleteVHPProcessAsync(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVHPProcessServiceChannel : NewMaterialCalculator.BasicService.IVHPProcessService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VHPProcessServiceClient : System.ServiceModel.ClientBase<NewMaterialCalculator.BasicService.IVHPProcessService>, NewMaterialCalculator.BasicService.IVHPProcessService {
        
        public VHPProcessServiceClient() {
        }
        
        public VHPProcessServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VHPProcessServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VHPProcessServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VHPProcessServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public NewMaterialCalculator.BasicService.DcBDVHPProcess[] GetVHPProcess() {
            return base.Channel.GetVHPProcess();
        }
        
        public System.Threading.Tasks.Task<NewMaterialCalculator.BasicService.DcBDVHPProcess[]> GetVHPProcessAsync() {
            return base.Channel.GetVHPProcessAsync();
        }
        
        public int AddVHPProcess(NewMaterialCalculator.BasicService.DcBDVHPProcess model) {
            return base.Channel.AddVHPProcess(model);
        }
        
        public System.Threading.Tasks.Task<int> AddVHPProcessAsync(NewMaterialCalculator.BasicService.DcBDVHPProcess model) {
            return base.Channel.AddVHPProcessAsync(model);
        }
        
        public int UpdateVHPProcess(NewMaterialCalculator.BasicService.DcBDVHPProcess model) {
            return base.Channel.UpdateVHPProcess(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateVHPProcessAsync(NewMaterialCalculator.BasicService.DcBDVHPProcess model) {
            return base.Channel.UpdateVHPProcessAsync(model);
        }
        
        public int DeleteVHPProcess(System.Guid id) {
            return base.Channel.DeleteVHPProcess(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteVHPProcessAsync(System.Guid id) {
            return base.Channel.DeleteVHPProcessAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BasicService.ICompoundService")]
    public interface ICompoundService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompoundService/GetAllCompounds", ReplyAction="http://tempuri.org/ICompoundService/GetAllCompoundsResponse")]
        NewMaterialCalculator.BasicService.DcBDCompound[] GetAllCompounds();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompoundService/GetAllCompounds", ReplyAction="http://tempuri.org/ICompoundService/GetAllCompoundsResponse")]
        System.Threading.Tasks.Task<NewMaterialCalculator.BasicService.DcBDCompound[]> GetAllCompoundsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompoundService/AddCompound", ReplyAction="http://tempuri.org/ICompoundService/AddCompoundResponse")]
        int AddCompound(NewMaterialCalculator.BasicService.DcBDCompound model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompoundService/AddCompound", ReplyAction="http://tempuri.org/ICompoundService/AddCompoundResponse")]
        System.Threading.Tasks.Task<int> AddCompoundAsync(NewMaterialCalculator.BasicService.DcBDCompound model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompoundService/UpdateCompound", ReplyAction="http://tempuri.org/ICompoundService/UpdateCompoundResponse")]
        int UpdateCompound(NewMaterialCalculator.BasicService.DcBDCompound model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompoundService/UpdateCompound", ReplyAction="http://tempuri.org/ICompoundService/UpdateCompoundResponse")]
        System.Threading.Tasks.Task<int> UpdateCompoundAsync(NewMaterialCalculator.BasicService.DcBDCompound model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompoundService/DeleteCompound", ReplyAction="http://tempuri.org/ICompoundService/DeleteCompoundResponse")]
        int DeleteCompound(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompoundService/DeleteCompound", ReplyAction="http://tempuri.org/ICompoundService/DeleteCompoundResponse")]
        System.Threading.Tasks.Task<int> DeleteCompoundAsync(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICompoundServiceChannel : NewMaterialCalculator.BasicService.ICompoundService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CompoundServiceClient : System.ServiceModel.ClientBase<NewMaterialCalculator.BasicService.ICompoundService>, NewMaterialCalculator.BasicService.ICompoundService {
        
        public CompoundServiceClient() {
        }
        
        public CompoundServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CompoundServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompoundServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompoundServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public NewMaterialCalculator.BasicService.DcBDCompound[] GetAllCompounds() {
            return base.Channel.GetAllCompounds();
        }
        
        public System.Threading.Tasks.Task<NewMaterialCalculator.BasicService.DcBDCompound[]> GetAllCompoundsAsync() {
            return base.Channel.GetAllCompoundsAsync();
        }
        
        public int AddCompound(NewMaterialCalculator.BasicService.DcBDCompound model) {
            return base.Channel.AddCompound(model);
        }
        
        public System.Threading.Tasks.Task<int> AddCompoundAsync(NewMaterialCalculator.BasicService.DcBDCompound model) {
            return base.Channel.AddCompoundAsync(model);
        }
        
        public int UpdateCompound(NewMaterialCalculator.BasicService.DcBDCompound model) {
            return base.Channel.UpdateCompound(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCompoundAsync(NewMaterialCalculator.BasicService.DcBDCompound model) {
            return base.Channel.UpdateCompoundAsync(model);
        }
        
        public int DeleteCompound(System.Guid id) {
            return base.Channel.DeleteCompound(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteCompoundAsync(System.Guid id) {
            return base.Channel.DeleteCompoundAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BasicService.ISupplierService")]
    public interface ISupplierService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/AddSupplier", ReplyAction="http://tempuri.org/ISupplierService/AddSupplierResponse")]
        int AddSupplier(NewMaterialCalculator.BasicService.DcBDSupplier model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/AddSupplier", ReplyAction="http://tempuri.org/ISupplierService/AddSupplierResponse")]
        System.Threading.Tasks.Task<int> AddSupplierAsync(NewMaterialCalculator.BasicService.DcBDSupplier model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/UpdateSupplier", ReplyAction="http://tempuri.org/ISupplierService/UpdateSupplierResponse")]
        int UpdateSupplier(NewMaterialCalculator.BasicService.DcBDSupplier model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/UpdateSupplier", ReplyAction="http://tempuri.org/ISupplierService/UpdateSupplierResponse")]
        System.Threading.Tasks.Task<int> UpdateSupplierAsync(NewMaterialCalculator.BasicService.DcBDSupplier model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/DeleteSupplier", ReplyAction="http://tempuri.org/ISupplierService/DeleteSupplierResponse")]
        int DeleteSupplier(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/DeleteSupplier", ReplyAction="http://tempuri.org/ISupplierService/DeleteSupplierResponse")]
        System.Threading.Tasks.Task<int> DeleteSupplierAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSuppliers", ReplyAction="http://tempuri.org/ISupplierService/GetSuppliersResponse")]
        NewMaterialCalculator.BasicService.DcBDSupplier[] GetSuppliers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSuppliers", ReplyAction="http://tempuri.org/ISupplierService/GetSuppliersResponse")]
        System.Threading.Tasks.Task<NewMaterialCalculator.BasicService.DcBDSupplier[]> GetSuppliersAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISupplierServiceChannel : NewMaterialCalculator.BasicService.ISupplierService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SupplierServiceClient : System.ServiceModel.ClientBase<NewMaterialCalculator.BasicService.ISupplierService>, NewMaterialCalculator.BasicService.ISupplierService {
        
        public SupplierServiceClient() {
        }
        
        public SupplierServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SupplierServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SupplierServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SupplierServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddSupplier(NewMaterialCalculator.BasicService.DcBDSupplier model) {
            return base.Channel.AddSupplier(model);
        }
        
        public System.Threading.Tasks.Task<int> AddSupplierAsync(NewMaterialCalculator.BasicService.DcBDSupplier model) {
            return base.Channel.AddSupplierAsync(model);
        }
        
        public int UpdateSupplier(NewMaterialCalculator.BasicService.DcBDSupplier model) {
            return base.Channel.UpdateSupplier(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateSupplierAsync(NewMaterialCalculator.BasicService.DcBDSupplier model) {
            return base.Channel.UpdateSupplierAsync(model);
        }
        
        public int DeleteSupplier(System.Guid id) {
            return base.Channel.DeleteSupplier(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteSupplierAsync(System.Guid id) {
            return base.Channel.DeleteSupplierAsync(id);
        }
        
        public NewMaterialCalculator.BasicService.DcBDSupplier[] GetSuppliers() {
            return base.Channel.GetSuppliers();
        }
        
        public System.Threading.Tasks.Task<NewMaterialCalculator.BasicService.DcBDSupplier[]> GetSuppliersAsync() {
            return base.Channel.GetSuppliersAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BasicService.IElementService")]
    public interface IElementService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElementService/GetElements", ReplyAction="http://tempuri.org/IElementService/GetElementsResponse")]
        NewMaterialCalculator.BasicService.DcBDElement[] GetElements();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElementService/GetElements", ReplyAction="http://tempuri.org/IElementService/GetElementsResponse")]
        System.Threading.Tasks.Task<NewMaterialCalculator.BasicService.DcBDElement[]> GetElementsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElementService/AddElement", ReplyAction="http://tempuri.org/IElementService/AddElementResponse")]
        int AddElement(NewMaterialCalculator.BasicService.DcBDElement model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElementService/AddElement", ReplyAction="http://tempuri.org/IElementService/AddElementResponse")]
        System.Threading.Tasks.Task<int> AddElementAsync(NewMaterialCalculator.BasicService.DcBDElement model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElementService/UpdateElement", ReplyAction="http://tempuri.org/IElementService/UpdateElementResponse")]
        int UpdateElement(NewMaterialCalculator.BasicService.DcBDElement model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElementService/UpdateElement", ReplyAction="http://tempuri.org/IElementService/UpdateElementResponse")]
        System.Threading.Tasks.Task<int> UpdateElementAsync(NewMaterialCalculator.BasicService.DcBDElement model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElementService/DeleteElement", ReplyAction="http://tempuri.org/IElementService/DeleteElementResponse")]
        int DeleteElement(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElementService/DeleteElement", ReplyAction="http://tempuri.org/IElementService/DeleteElementResponse")]
        System.Threading.Tasks.Task<int> DeleteElementAsync(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IElementServiceChannel : NewMaterialCalculator.BasicService.IElementService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ElementServiceClient : System.ServiceModel.ClientBase<NewMaterialCalculator.BasicService.IElementService>, NewMaterialCalculator.BasicService.IElementService {
        
        public ElementServiceClient() {
        }
        
        public ElementServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ElementServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ElementServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ElementServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public NewMaterialCalculator.BasicService.DcBDElement[] GetElements() {
            return base.Channel.GetElements();
        }
        
        public System.Threading.Tasks.Task<NewMaterialCalculator.BasicService.DcBDElement[]> GetElementsAsync() {
            return base.Channel.GetElementsAsync();
        }
        
        public int AddElement(NewMaterialCalculator.BasicService.DcBDElement model) {
            return base.Channel.AddElement(model);
        }
        
        public System.Threading.Tasks.Task<int> AddElementAsync(NewMaterialCalculator.BasicService.DcBDElement model) {
            return base.Channel.AddElementAsync(model);
        }
        
        public int UpdateElement(NewMaterialCalculator.BasicService.DcBDElement model) {
            return base.Channel.UpdateElement(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateElementAsync(NewMaterialCalculator.BasicService.DcBDElement model) {
            return base.Channel.UpdateElementAsync(model);
        }
        
        public int DeleteElement(System.Guid id) {
            return base.Channel.DeleteElement(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteElementAsync(System.Guid id) {
            return base.Channel.DeleteElementAsync(id);
        }
    }
}
